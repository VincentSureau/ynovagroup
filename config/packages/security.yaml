security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            logout:
                path:   app_logout
            form_login: true
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
    
            guard:
                authenticators:
                    - App\Security\AppAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: '^\/gestionnaires', roles: ROLE_DEVELOPER } 
        # - { path: '^\/pharmacies', roles: ROLE_DEVELOPER } 
        # - { path: '^\/documents', roles: ROLE_DEVELOPER } 
        # - { path: '^\/articles', roles: ROLE_DEVELOPER } 
        # /vianney je veux bien que tu vérifies si la hiérarchie est bien faite, et bonne. Ensuite, savoir qui a le droit d'accéder à telle ou telle page
    role_hierarchy:
        ROLE_ADMIN: ROLE_DEVELOPER
        ROLE_DEVELOPER: ROLE_BUSINESS
        ROLE_BUSINESS: ROLE_USER
